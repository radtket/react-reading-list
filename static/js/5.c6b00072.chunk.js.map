{"version":3,"sources":["components/ToolbarMixin.js","App/AuthenticatedApp/Navbar.js","utils/books-client.js","App/AuthenticatedApp/pages/BookScreen.js","App/AuthenticatedApp/pages/DiscoverBooksScreen/NotSearched.js","App/AuthenticatedApp/pages/DiscoverBooksScreen/HasSearched.js","App/AuthenticatedApp/pages/DiscoverBooksScreen/index.js","App/AuthenticatedApp/pages/FinishedScreen.js","App/AuthenticatedApp/pages/NotFound.js","App/AuthenticatedApp/pages/ReadingListScreen.js","App/routes.js","App/AuthenticatedApp/index.js"],"names":["useStyles","makeStyles","toolbar","mixins","ToolbarMixin","className","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","Navbar","username","useUser","logout","useAuth","AppBar","position","Toolbar","Typography","style","flexGrow","variant","Button","color","onClick","Drawer","anchor","classes","paper","Divider","List","ListItem","button","component","Link","to","ListItemIcon","LocalLibrary","ListItemText","primary","PlaylistAddCheck","FindInPage","search","query","client","encodeURIComponent","getBook","bookId","read","then","data","book","BookScreen","useAsync","promiseFn","isPending","isRejected","isResolved","error","listItem","useSingleListItemState","gutterBottom","Grid","container","spacing","item","xs","defaultProps","NotSearched","noBooksFound","Box","mt","textAlign","m","HasSearched","initialSearch","DiscoverBooksScreen","useState","setQuery","hasSearched","setHasSearched","deferFn","run","books","isArrayEmpty","handleInputChange","target","value","handleSearchClick","e","preventDefault","map","key","id","FinishedScreen","filterListItems","finishDate","Boolean","noFilteredListItems","noListItems","NotFound","alignItems","components","Container","display","flexDirection","height","justifyContent","MuiLink","ReadingListScreen","li","RedirectHome","Routes","path","default","AuthenticatedApp","backgroundColor","padding"],"mappings":"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","file":"static/js/5.c6b00072.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(({ mixins }) => ({\n  toolbar: mixins.toolbar,\n}));\n\nconst ToolbarMixin = () => {\n  const { toolbar } = useStyles();\n\n  return <div className={toolbar} />;\n};\n\nexport default ToolbarMixin;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\n// Material UI\nimport {\n  AppBar,\n  Button,\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { FindInPage, LocalLibrary, PlaylistAddCheck } from \"@material-ui/icons\";\n\n// Components\nimport { useAuth } from \"../../context/auth-context\";\nimport { useUser } from \"../../context/user-context\";\nimport ToolbarMixin from \"../../components/ToolbarMixin\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(() => ({\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\nconst Navbar = () => {\n  const { appBar, drawer, drawerPaper } = useStyles();\n  const { username } = useUser();\n  const { logout } = useAuth();\n\n  return (\n    <>\n      <AppBar className={appBar} position=\"fixed\">\n        <Toolbar>\n          <Typography\n            style={{\n              flexGrow: 1,\n            }}\n            variant=\"h6\"\n          >\n            {username}\n          </Typography>\n          <Button color=\"inherit\" onClick={logout}>\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        anchor=\"left\"\n        classes={{\n          paper: drawerPaper,\n        }}\n        className={drawer}\n        variant=\"permanent\"\n      >\n        <ToolbarMixin />\n\n        <Divider />\n        <List>\n          <ListItem button component={Link} to=\"/list\">\n            <ListItemIcon>\n              <LocalLibrary />\n            </ListItemIcon>\n            <ListItemText primary=\"Reading List\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/finished\">\n            <ListItemIcon>\n              <PlaylistAddCheck />\n            </ListItemIcon>\n            <ListItemText primary=\"Finished Books\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/discover\">\n            <ListItemIcon>\n              <FindInPage />\n            </ListItemIcon>\n            <ListItemText primary=\"Discover\" />\n          </ListItem>\n        </List>\n      </Drawer>\n    </>\n  );\n};\n\nexport default Navbar;\n","import client from \"./api-client\";\n\nconst search = query => {\n  return client(`book?query=${encodeURIComponent(query)}`);\n};\n\nconst read = bookId => {\n  return client(`book/${bookId}`);\n};\n\nexport { search, read };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useAsync } from \"react-async\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nimport { useSingleListItemState } from \"../../../context/list-item-context\";\nimport { read } from \"../../../utils/books-client\";\n\n// Components\nimport {\n  BookCardHorizontal,\n  BookNotes,\n  ErrorMessage,\n  FullPageSpinner,\n} from \"../../../components\";\n\nconst getBook = ({ bookId }) => {\n  return read(bookId).then(data => data.book);\n};\n\nconst BookScreen = ({ bookId }) => {\n  const { data: book, isPending, isRejected, isResolved, error } = useAsync({\n    promiseFn: getBook,\n    bookId,\n  });\n  const listItem = useSingleListItemState({ bookId });\n\n  if (isPending) {\n    return <FullPageSpinner />;\n  }\n\n  if (isRejected) {\n    return <ErrorMessage {...{ error }} />;\n  }\n\n  if (isResolved && !book) {\n    return (\n      <Typography color=\"error\" gutterBottom variant=\"body1\">\n        Hmmm... Something's not quite right. Please try another book.\n      </Typography>\n    );\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={6}>\n        <BookCardHorizontal {...{ book, listItem }} />\n      </Grid>\n\n      {listItem && (\n        <Grid item xs={6}>\n          <BookNotes {...{ listItem }} />\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nBookScreen.propTypes = {\n  bookId: PropTypes.string,\n};\n\nBookScreen.defaultProps = {\n  bookId: null,\n};\n\nexport default BookScreen;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { Spinner } from \"../../../../components\";\n\nconst NotSearched = ({ isPending, isResolved, noBooksFound }) => {\n  return (\n    <Box mt={3} textAlign=\"center\">\n      <Typography variant=\"body1\">Welcome to the discover page.</Typography>\n      <Typography variant=\"body1\">\n        Here, let me load a few books for you...\n      </Typography>\n\n      {isPending && (\n        <Box m=\"auto\" width={1}>\n          <Spinner />\n        </Box>\n      )}\n\n      {isResolved && (\n        <Typography>\n          {!noBooksFound\n            ? \"Here you go! Find more books with the search bar above.\"\n            : \"Hmmm... I couldn't find any books to suggest for you. Sorry.\"}\n        </Typography>\n      )}\n    </Box>\n  );\n};\n\nNotSearched.propTypes = {\n  isPending: PropTypes.bool.isRequired,\n  isResolved: PropTypes.bool.isRequired,\n  noBooksFound: PropTypes.bool.isRequired,\n};\n\nexport default NotSearched;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { Spinner } from \"../../../../components\";\n\nconst HasSearched = ({ isPending, query }) => {\n  if (isPending) {\n    return (\n      <Box m=\"auto\" width={1}>\n        <Spinner />\n      </Box>\n    );\n  }\n\n  return (\n    <Typography variant=\"body1\">\n      Hmmm... I couldn't find any books with the query \"{query}.\" Please try\n      another.\n    </Typography>\n  );\n};\n\nHasSearched.propTypes = {\n  isPending: PropTypes.bool.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default HasSearched;\n","import React, { useState } from \"react\";\nimport { useAsync } from \"react-async\";\nimport { Grid } from \"@material-ui/core\";\nimport { search } from \"../../../../utils/books-client\";\n\n// Components\nimport {\n  BookCardVertical,\n  // ErrorMessage,\n  SearchBar,\n} from \"../../../../components\";\nimport { isArrayEmpty } from \"../../../../utils/helpers\";\n\n// SubComponents\nimport NotSearched from \"./NotSearched\";\nimport HasSearched from \"./HasSearched\";\n\nconst initialSearch = () => search(\"\");\n\nconst DiscoverBooksScreen = () => {\n  const [query, setQuery] = useState(\"\");\n  const [hasSearched, setHasSearched] = useState();\n  const { data, isPending, isRejected, isResolved, error, run } = useAsync({\n    promiseFn: initialSearch,\n    deferFn: search,\n  });\n\n  const handleInputChange = ({ target }) => {\n    setQuery(target.value);\n  };\n\n  const handleSearchClick = e => {\n    e.preventDefault();\n    setHasSearched(true);\n    run(query);\n  };\n\n  const { books } = data || { books: [] };\n\n  const noBooksFound = isArrayEmpty(books);\n\n  return (\n    <div>\n      <div>\n        <SearchBar\n          {...{\n            handleInputChange,\n            handleSearchClick,\n            isPending,\n            isRejected,\n            error,\n          }}\n        />\n      </div>\n      <div>\n        {!hasSearched && (\n          <NotSearched {...{ isPending, isResolved, noBooksFound }} />\n        )}\n\n        {isResolved && (\n          <>\n            {!noBooksFound && (\n              <Grid container spacing={3}>\n                {books.map(book => (\n                  <Grid key={book.id} item xs={3}>\n                    <BookCardVertical {...{ book }} />\n                  </Grid>\n                ))}\n              </Grid>\n            )}\n            {noBooksFound && hasSearched && (\n              <HasSearched {...{ isPending, query }} />\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DiscoverBooksScreen;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { Link } from \"@reach/router\";\n\n// Components\nimport { ListItemList } from \"../../../components\";\n\nconst FinishedScreen = () => (\n  <ListItemList\n    filterListItems={({ finishDate }) => Boolean(finishDate)}\n    noFilteredListItems={\n      <Typography gutterBottom variant=\"body1\">\n        Looks like you've got some reading to do! Check them out in your{\" \"}\n        <Link to=\"/list\">reading list</Link> or{\" \"}\n        <Link to=\"/discover\">discover more</Link>.\n      </Typography>\n    }\n    noListItems={\n      <Typography gutterBottom variant=\"body1\">\n        Hey there! This is where books will go when you've finished reading\n        them. Get started by heading over to{\" \"}\n        <Link to=\"/discover\">the Discover page</Link> to add books to your list.\n      </Typography>\n    }\n  />\n);\n\nexport default FinishedScreen;\n","import React from \"react\";\nimport { Box, Container, Link, Typography } from \"@material-ui/core\";\nimport { Link as MuiLink } from \"@reach/router\";\n\nconst NotFound = () => (\n  <Box\n    alignItems=\"center\"\n    components={Container}\n    display=\"flex\"\n    flexDirection=\"column\"\n    height=\"100vh\"\n    justifyContent=\"center\"\n    textAlign=\"center\"\n  >\n    <Typography gutterBottom variant=\"h6\">\n      Sorry... nothing here.\n    </Typography>\n    <Link component={MuiLink} to=\"/\" variant=\"body1\">\n      Go home\n    </Link>\n  </Box>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"@reach/router\";\n\n// Components\nimport {\n  // ErrorMessage,\n  ListItemList,\n} from \"../../../components\";\n\nconst ReadingListScreen = () => (\n  <ListItemList\n    filterListItems={li => !li.finishDate}\n    noFilteredListItems={\n      <Typography gutterBottom variant=\"body1\">\n        Looks like you've finished all your books! Check them out in your{\" \"}\n        <Link to=\"/finished\">finished books</Link> or{\" \"}\n        <Link to=\"/discover\">discover more</Link>.\n      </Typography>\n    }\n    noListItems={\n      <Typography gutterBottom variant=\"body1\">\n        Hey there! Welcome to your bookshelf reading list. Get started by\n        heading over to <Link to=\"/discover\">the Discover page</Link> to add\n        books to your list.\n      </Typography>\n    }\n  />\n);\n\nexport default ReadingListScreen;\n","import React from \"react\";\nimport { Router, Redirect } from \"@reach/router\";\n\n// Context\nimport { ListItemProvider } from \"../context/list-item-context\";\n\n// Pages\nimport BookScreen from \"./AuthenticatedApp/pages/BookScreen\";\nimport DiscoverBooksScreen from \"./AuthenticatedApp/pages/DiscoverBooksScreen\";\nimport FinishedBooksScreen from \"./AuthenticatedApp/pages/FinishedScreen\";\nimport NotFound from \"./AuthenticatedApp/pages/NotFound\";\nimport ReadingListScreen from \"./AuthenticatedApp/pages/ReadingListScreen\";\n\nconst RedirectHome = () => {\n  return <Redirect to=\"/list\" />;\n};\n\nconst Routes = () => {\n  return (\n    <ListItemProvider>\n      <Router>\n        <RedirectHome path=\"/\" />\n        <BookScreen path=\"/book/:bookId\" />\n        <DiscoverBooksScreen path=\"/discover\" />\n        <FinishedBooksScreen path=\"/finished\" />\n        <ReadingListScreen path=\"/list\" />\n        <NotFound default />\n      </Router>\n    </ListItemProvider>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\n\n// Material UI\nimport { Box } from \"@material-ui/core\";\n\n// Components\nimport Navbar from \"./Navbar\";\nimport Routes from \"../routes\";\nimport ToolbarMixin from \"../../components/ToolbarMixin\";\n\nconst AuthenticatedApp = () => {\n  return (\n    <Box display=\"flex\">\n      <Navbar />\n      <Box\n        // Check out if this background is rendering\n        backgroundColor=\"palette.background.default\"\n        component=\"main\"\n        flexGrow={1}\n        padding={3}\n      >\n        <ToolbarMixin />\n        <Routes />\n      </Box>\n    </Box>\n  );\n};\n\nexport default AuthenticatedApp;\n"],"sourceRoot":""}