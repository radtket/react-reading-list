{"version":3,"sources":["utils/use-callback-status.js","App/UnauthenticatedApp/FormDialog.js","App/UnauthenticatedApp/index.js"],"names":["useCallbackStatus","isMounted","mounted","useRef","useLayoutEffect","current","useIsMounted","useReducer","s","a","status","error","setState","safeSetState","isPending","isRejected","run","promise","then","Error","value","err","Promise","reject","FormDialog","button","buttonText","handleSubmit","useState","open","setOpen","username","password","values","setValues","handleChange","name","event","target","handleClose","cloneElement","onClick","Dialog","aria-labelledby","slugify","fullWidth","maxWidth","onClose","DialogTitle","id","DialogContent","DialogContentText","color","Box","alignItems","component","display","flexDirection","onSubmit","e","preventDefault","TextField","autoFocus","label","margin","onChange","DialogActions","Button","type","style","marginLeft","UnauthenticatedApp","useAuth","login","register","components","Container","height","justifyContent","textAlign","width","Typography","gutterBottom","variant","marginRight"],"mappings":"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","file":"static/js/6.7c2d1dfd.chunk.js","sourcesContent":["import { useRef, useLayoutEffect, useReducer } from \"react\";\n\nconst useIsMounted = () => {\n  const mounted = useRef(false);\n  useLayoutEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return mounted;\n};\n\nconst useCallbackStatus = () => {\n  const isMounted = useIsMounted();\n  const [{ status, error }, setState] = useReducer((s, a) => ({ ...s, ...a }), {\n    status: \"rest\",\n    error: null,\n  });\n\n  const safeSetState = (...args) =>\n    isMounted.current ? setState(...args) : null;\n\n  const isPending = status === \"pending\";\n  const isRejected = status === \"rejected\";\n\n  const run = promise => {\n    if (!promise || !promise.then) {\n      throw new Error(\n        `The argument passed to useCallbackStatus().run must be a promise. Maybe a function that's passed isn't returning anything?`\n      );\n    }\n    safeSetState({ status: \"pending\" });\n    return promise.then(\n      value => {\n        safeSetState({ status: \"rest\" });\n        return value;\n      },\n      err => {\n        safeSetState({ status: \"rejected\", error: err });\n        return Promise.reject(err);\n      }\n    );\n  };\n\n  return {\n    isPending,\n    isRejected,\n    error,\n    status,\n    run,\n  };\n};\n\nexport default useCallbackStatus;\n","import React, { useState, cloneElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\n\n// Components\nimport { Spinner, ErrorMessage } from \"../../components\";\n\nimport useCallbackStatus from \"../../utils/use-callback-status\";\nimport { slugify } from \"../../utils/helpers\";\n\nconst FormDialog = ({ button, buttonText, handleSubmit }) => {\n  const { isPending, isRejected, error, run } = useCallbackStatus();\n  const [open, setOpen] = useState(false);\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {cloneElement(button, { onClick: () => setOpen(true) })}\n      <Dialog\n        aria-labelledby={slugify(`${buttonText} Form Title`)}\n        fullWidth\n        maxWidth=\"xs\"\n        onClose={handleClose}\n        {...{ open }}\n      >\n        <DialogTitle id={slugify(`${buttonText} Form Title`)}>\n          {buttonText}\n        </DialogTitle>\n\n        <DialogContent>\n          {isRejected && (\n            <DialogContentText color=\"error\">\n              <ErrorMessage {...{ error }} />\n            </DialogContentText>\n          )}\n          <Box\n            alignItems=\"stretch\"\n            component=\"form\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            onSubmit={e => {\n              e.preventDefault();\n              run(\n                handleSubmit({\n                  ...values,\n                })\n              );\n            }}\n          >\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Username\"\n              margin=\"normal\"\n              onChange={handleChange(\"username\")}\n              value={values.username}\n            />\n\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={handleChange(\"password\")}\n              value={values.password}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={e => {\n              e.preventDefault();\n              run(\n                handleSubmit({\n                  ...values,\n                })\n              );\n            }}\n            type=\"submit\"\n          >\n            {buttonText} {isPending && <Spinner style={{ marginLeft: 5 }} />}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nFormDialog.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  button: PropTypes.node.isRequired,\n};\n\nexport default FormDialog;\n","import React from \"react\";\nimport { Box, Container, Button, Typography } from \"@material-ui/core\";\nimport { useAuth } from \"../../context/auth-context\";\n\n// Components\nimport FormDialog from \"./FormDialog\";\nimport { Logo } from \"../../components\";\n\nconst UnauthenticatedApp = () => {\n  const { login, register } = useAuth();\n  return (\n    <Box\n      alignItems=\"center\"\n      components={Container}\n      display=\"flex\"\n      flexDirection=\"column\"\n      height=\"100vh\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n    >\n      <Logo height=\"80\" width=\"80\" />\n      <Typography gutterBottom variant=\"h4\">\n        Bookshelf\n      </Typography>\n      <Box display=\"flex\">\n        {/* Login */}\n        <FormDialog\n          button={\n            <Button\n              color=\"primary\"\n              style={{\n                marginRight: 6,\n              }}\n              variant=\"contained\"\n            >\n              Login\n            </Button>\n          }\n          buttonText=\"Login\"\n          handleSubmit={login}\n        />\n        {/* Register */}\n        <FormDialog\n          button={<Button>Register</Button>}\n          buttonText=\"Register\"\n          handleSubmit={register}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default UnauthenticatedApp;\n"],"sourceRoot":""}